type AdminCodes1 {
  ISO3166_2: String
}
type GeonamesEntry {
  adminCode1: Int
  adminCodes1: AdminCodes1
  adminName1: String
  countryCode: String
  countryId: Int
  countryName: String
  fcl: String
  fclName: String
  fcode: String
  fcodeName: String
  geonameId: Int
  lat: Float
  lng: Float
  name: String
  population: Float
  toponymName: String
}
type GeonamesRoot {
  geonames: [GeonamesEntry]
}

type Query {
  getNearbyInfoFromLatLong(lat: Float, lng: Float): GeonamesRoot
    @rest(
      endpoint: "http://api.geonames.org/extendedFindNearbyJSON?lat=$lat&lng=$lng&username=gaurang7"
      cel: """
        function transformREST(s) {
        let out = JSON.parse(s);
        if(out.address){
          let reponse = {"geonames" : [{
            "toponymName": "Earth",
            "name": "Earth"
          },null,null,{
            "toponymName": out.address.adminName1,
            "name": out.address.adminName1
          },{
            "toponymName": out.address.placename,
            "name": out.address.placename
          }]};
          return JSON.stringify(reponse);
        }else{
          return JSON.stringify(out);
        }
      }
      """
    )
}
