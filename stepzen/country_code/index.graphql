type country_code {
  countryCode: String
  countryName: String
  distance: Int
  languages: String
  lat: Float
  long: Float
  country: [CountryEntry]
    @materializer(
      query: "country"
      arguments: [{ name: "countryCode", field: "countryCode" }]
    )
  currency: String
    @materializer(
      query: "getCurrencyCodeForCountry"
      arguments: [{ name: "countryCode", field: "countryCode" }]
    )
  weather: WeatherForecastResponse
    @materializer(
      query: "weatherLookupByCoordinates"
      arguments: [
        { name: "latitude", field: "lat" }
        { name: "longitude", field: "long" }
      ]
    )
  food: Food
    @materializer(
      query: "getFoodByLatLong"
      arguments: [
        { name: "latitude", field: "lat" }
        { name: "longitude", field: "long" }
      ]
    )
  holidays: Holiday
    @materializer(
      query: "holidayListByCountry"
      arguments: [{ name: "countryCode", field: "countryCode" }]
    )
  covid: CovidData
    @materializer(
      query: "covid"
      arguments: [{ name: "countryCode", field: "countryCode" }]
    )
  historical_covid: HistoricalCovidData
    @materializer(
      query: "historical_covid"
      arguments: [{ name: "countryCode", field: "countryCode" }]
    )
  currency_latest_rates: Currency_Latest_Rates
    @materializer(
      query: "currency_latest_rates"
      arguments: [{ name: "to", field: "currency" }]
    )
  currency_time_series: Currency_TimeSeries_Rates
    @materializer(
      query: "currency_time_series"
      arguments: [{ name: "to", field: "currency" }]
    )
  air_quality: AQ
    @materializer(
      query: "air_quality"
      arguments: [
        { name: "latitude", field: "lat" }
        { name: "longitude", field: "long" }
      ]
    )
  nearby_cafes: Root
    @materializer(
      query: "getPoiForLatLong_cafes"
      arguments: [{ name: "lat", field: "lat" }, { name: "lon", field: "long" }]
    )
  nearby_malls: Root
    @materializer(
      query: "getPoiForLatLong_malls"
      arguments: [{ name: "lat", field: "lat" }, { name: "lon", field: "long" }]
    )
  nearby_picnic_spots: Root
    @materializer(
      query: "getPoiForLatLong_picnic"
      arguments: [{ name: "lat", field: "lat" }, { name: "lon", field: "long" }]
    )
}

type Query {
  getDataforLatLong(lat: Float, lng: Float): country_code
    @rest(
      endpoint: "http://api.geonames.org/countryCodeJSON?lat=$lat&lng=$lng&username=gaurang7"
      cel: """
        function transformREST(s) {
        let out = JSON.parse(s);
        out['lat'] = get("lat");
        out['long'] = get("lng");
        return JSON.stringify(out);
      }
      """
    )
}
